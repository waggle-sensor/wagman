- Currently, if a fatal failure occurs during POST, we write the specific failure to EEPROM.  Is that specific failure relevant?  You're just gonna replace the chip anyway.

- Non-fatal failures are relevant to the "SOS boot mode" routine, but again, you're just going to replace the chip.

- C-based POST is not perfect.  Some redundancy and assumptions.  To make it as perfect as possible without having an external helper chip, we'd have to write the POST in pure assembly, and that would have to execute before any C initialization/code.  That's probably not worth the effort, in this case.  We're not going to Mars.

- Arduino Micro bootloader (Caterina) clears MCUSR, making me unable to detect the reset reason in my sketch.

- http://dangerousprototypes.com/docs/Self-test_guide

- Boot up takes a long time, but that doesn't matter for us.  We can take several seconds to boot SysMon, because nothing happens until SysMon makes it so.

- Devices are permanently disabled only if they are drawing too much power, since this is the only state that presents danger to the overall system.
- I want it to be kinda hard to disable a device, so this only happens during the power check on boot
	- If a device times out for bad power, etc., it will reboot...so this works fine
- Heartbeat is tried n number of times, because it is the most complex (and therefore, the most fragile).